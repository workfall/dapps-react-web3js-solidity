import React, { useEffect, useState } from "react";
import { CONTRACT_ABI, CONTRACT_ADDRESS } from "../constants";
import Head from "next/head";
import Web3 from "web3";

export default function Home() {
  const [walletAddress, setWalletAddress] = useState();
  const [stateVariable, setStateVariable] = useState();
  const [changedStateVariable, setChangedStateVariable] = useState();

  let provider = typeof window !== "undefined" && window.ethereum;

  const connectMeta = async () => {
    try {
      if (!provider) return alert("Please Install MetaMask");

      const accounts = await provider.request({
        method: "eth_requestAccounts",
      });

      if (accounts.length) {
        setWalletAddress(accounts[0]);
      }
    } catch (error) {
      console.error(error);
    }
  };

  const getContract = () => {
    const web3 = new Web3(provider);

    return new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);
  };

  const readData = () => {
    const contract = getContract();

    contract.methods
      .stateVariable()
      .call()
      .then((res) => {
        console.log(res);
        setStateVariable(res);
      })
      .catch((err) => console.log(err));
  };

  const readChangedData = () => {
    const contract = getContract();

    contract.methods
      .changeStateVariable()
      .call()
      .then((res) => {
        console.log(res);
        setChangedStateVariable(res);
      })
      .catch((err) => console.log(err));
  };

  const writeData = () => {
    const contract = getContract();

    // storing 100 to the state variable in the contract
    contract.methods
      .ChangeState(100)
      .send({ from: walletAddress })
      .then((res) => {
        console.log(res);
      })
      .catch((err) => console.log(err));
  };

  useEffect(() => {
    connectMeta();
  }, []);

  return (
    <div className="container">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <div>
          <p>stateVariable: {stateVariable}</p>
          <button className="btn" onClick={readData}>
            Read stateVariable
          </button>
        </div>

        <div>
          <p>changedStateVariable: {changedStateVariable}</p>
          <button className="btn" onClick={readChangedData}>
            Read changeStateVariable
          </button>
        </div>

        <button className="btn" onClick={writeData}>
          ChangeState
        </button>
      </div>
    </div>
  );
}
